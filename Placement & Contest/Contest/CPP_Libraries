size() -> string, vector, stack, queue, map
empty() -> string, vector, stack, queue, map
find() -> string, map
clear() -> string, vector

INT_MAX -> <limits>

### `<iostream>`
- ✅`std::cin`, `std::cout`, `std::cerr`: Standard input, output, and error streams.
- ✅`std::endl`: Outputs a newline character and flushes the output buffer.
- `std::getline()`: Reads a line of input into a string.

### `<string>`
- ✅`str.length()`, `str.size()`: Returns the length of the string.
- ✅`str.empty()`: Checks if the string is empty.
- `str.clear()`: Clears the contents of the string.
- `str.substr(pos, len)`: Returns a substring starting at `pos` with length `len`.
- `str.find(substring)`, `str.find(substring, pos)`: Finds the first occurrence of `substring` starting from `pos`.

### `<vector>`
- ✅`vec.size()`: Returns the number of elements in the vector.
- `vec.empty()`: Checks if the vector is empty.
- ✅`vec.push_back(val)`: Adds `val` to the end of the vector.
- ✅`vec.pop_back()`: Removes the last element from the vector.
- `vec.clear()`: Removes all elements from the vector.

### `<stack>`
- ✅`stk.empty()`: Checks if the stack is empty.
- `stk.size()`: Returns the number of elements in the stack.
- ✅`stk.push(val)`: Adds `val` to the top of the stack.
- ✅`stk.pop()`: Removes the top element from the stack.
- ✅`stk.top()`: Returns a reference to the top element of the stack.

### `<queue>`
- ✅`que.empty()`: Checks if the queue is empty.
- `que.size()`: Returns the number of elements in the queue.
- ✅`que.push(val)`: Adds `val` to the back of the queue.
- ✅`que.pop()`: Removes the front element from the queue.
- ✅`que.front()`: Returns a reference to the front element of the queue.
- ✅`que.back()`: Returns a reference to the back element of the queue.

### `<map>` and `<unordered_map>`
- `map.empty()`: Checks if the map is empty.
- ✅`map.size()`: Returns the number of elements in the map.
- `map.insert(pair)`: Inserts a key-value pair into the map.
- `map.erase(key)`: Removes the element with the specified `key`.
- `map.find(key)`: Finds an element with the specified `key`.
- ✅`map[key]`: Accesses the value associated with `key`.

### `<algorithm>`
- ✅`std::sort(first, last)`: Sorts elements in the range `[first, last)` in ascending order.
- ✅`std::max(a, b)`, `std::min(a, b)`: Returns the maximum or minimum of `a` and `b`.
- `std::find(first, last, value)`: Searches for `value` in the range `[first, last)`.

### `<cmath>`
- `std::abs(x)`: Returns the absolute value of `x`.
- `std::sqrt(x)`: Computes the square root of `x`.
- `std::pow(base, exp)`: Computes `base` raised to the power `exp`.
- `std::ceil(x)`, `std::floor(x)`: Rounds `x` up or down to the nearest integer.
